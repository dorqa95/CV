{"version":3,"sources":["main.min.js","main.js"],"names":["select","el","all","trim","document","querySelectorAll","querySelector","on","type","listener","selectEl","forEach","e","addEventListener","onscroll","navbarlinks","navbarlinksActive","position","window","scrollY","navbarlink","hash","section","offsetTop","offsetHeight","classList","add","remove","scrollto","elementPos","scrollTo","top","behavior","location","backtotop","toggleBacktotop","toggle","this","preventDefault","body","contains","navbarToggle","typed","typed_strings","getAttribute","split","Typed","strings","loop","typeSpeed","backSpeed","backDelay","skilsContent","Waypoint","element","offset","handler","direction","style","width","portfolioContainer","portfolioIsotope","Isotope","itemSelector","portfolioFilters","arrange","filter","AOS","refresh","GLightbox","selector","Swiper","speed","autoplay","delay","disableOnInteraction","pagination","clickable","slidesPerView","breakpoints","spaceBetween","init","duration","easing","once","mirror"],"mappings":"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","file":"main.min.js","sourcesContent":[null,"/**\r\n * Template Name: iPortfolio - v3.6.0\r\n * Template URL: https://bootstrapmade.com/iportfolio-bootstrap-portfolio-websites-template/\r\n * Author: BootstrapMade.com\r\n * License: https://bootstrapmade.com/license/\r\n */\r\n(function () {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Easy selector helper function\r\n     */\r\n    const select = (el, all = false) => {\r\n        el = el.trim()\r\n        if (all) {\r\n            return [...document.querySelectorAll(el)]\r\n        } else {\r\n            return document.querySelector(el)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Easy event listener function\r\n     */\r\n    const on = (type, el, listener, all = false) => {\r\n        let selectEl = select(el, all)\r\n        if (selectEl) {\r\n            if (all) {\r\n                selectEl.forEach(e => e.addEventListener(type, listener))\r\n            } else {\r\n                selectEl.addEventListener(type, listener)\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Easy on scroll event listener\r\n     */\r\n    const onscroll = (el, listener) => {\r\n        el.addEventListener('scroll', listener)\r\n    }\r\n\r\n    /**\r\n     * Navbar links active state on scroll\r\n     */\r\n    let navbarlinks = select('#navbar .scrollto', true)\r\n    const navbarlinksActive = () => {\r\n        let position = window.scrollY + 200\r\n        navbarlinks.forEach(navbarlink => {\r\n            if (!navbarlink.hash) return\r\n            let section = select(navbarlink.hash)\r\n            if (!section) return\r\n            if (position >= section.offsetTop && position <= (section.offsetTop + section.offsetHeight)) {\r\n                navbarlink.classList.add('active')\r\n            } else {\r\n                navbarlink.classList.remove('active')\r\n            }\r\n        })\r\n    }\r\n    window.addEventListener('load', navbarlinksActive)\r\n    onscroll(document, navbarlinksActive)\r\n\r\n    /**\r\n     * Scrolls to an element with header offset\r\n     */\r\n    const scrollto = (el) => {\r\n        let elementPos = select(el).offsetTop\r\n        window.scrollTo({\r\n            top: elementPos,\r\n            behavior: 'smooth'\r\n        })\r\n        window.location.hash = el;\r\n\r\n    }\r\n\r\n    /**\r\n     * Back to top button\r\n     */\r\n    let backtotop = select('.back-to-top')\r\n    if (backtotop) {\r\n        const toggleBacktotop = () => {\r\n            if (window.scrollY > 100) {\r\n                backtotop.classList.add('active')\r\n            } else {\r\n                backtotop.classList.remove('active')\r\n            }\r\n        }\r\n        window.addEventListener('load', toggleBacktotop)\r\n        onscroll(document, toggleBacktotop)\r\n    }\r\n\r\n    /**\r\n     * Mobile nav toggle\r\n     */\r\n    on('click', '.mobile-nav-toggle', function (e) {\r\n        select('body').classList.toggle('mobile-nav-active')\r\n        this.classList.toggle('bi-list')\r\n        this.classList.toggle('bi-x')\r\n    })\r\n\r\n    /**\r\n     * Scrool with offset on links with a class name .scrollto\r\n     */\r\n    on('click', '.scrollto', function (e) {\r\n        if (select(this.hash)) {\r\n            e.preventDefault()\r\n\r\n            let body = select('body')\r\n            if (body.classList.contains('mobile-nav-active')) {\r\n                body.classList.remove('mobile-nav-active')\r\n                let navbarToggle = select('.mobile-nav-toggle')\r\n                navbarToggle.classList.toggle('bi-list')\r\n                navbarToggle.classList.toggle('bi-x')\r\n            }\r\n            scrollto(this.hash)\r\n        }\r\n    }, true)\r\n\r\n    /**\r\n     * Scroll with offset on page load with hash links in the url\r\n     */\r\n    window.addEventListener('load', () => {\r\n        if (window.location.hash && select(window.location.hash)) {\r\n            scrollto(window.location.hash)\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Hero type effect\r\n     */\r\n    const typed = select('.typed')\r\n    if (typed) {\r\n        let typed_strings = typed.getAttribute('data-typed-items')\r\n        typed_strings = typed_strings.split(',')\r\n        new Typed('.typed', {\r\n            strings: typed_strings,\r\n            loop: true,\r\n            typeSpeed: 100,\r\n            backSpeed: 50,\r\n            backDelay: 2000\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Skills animation\r\n     */\r\n    let skilsContent = select('.skills-content');\r\n    if (skilsContent) {\r\n        new Waypoint({\r\n            element: skilsContent,\r\n            offset: '80%',\r\n            handler: function (direction) {\r\n                let progress = select('.progress .progress-bar', true);\r\n                progress.forEach((el) => {\r\n                    el.style.width = el.getAttribute('aria-valuenow') + '%'\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Porfolio isotope and filter\r\n     */\r\n    window.addEventListener('load', () => {\r\n        let portfolioContainer = select('.portfolio-container');\r\n        if (portfolioContainer) {\r\n            let portfolioIsotope = new Isotope(portfolioContainer, {\r\n                itemSelector: '.portfolio-item'\r\n            });\r\n\r\n            let portfolioFilters = select('#portfolio-filters li', true);\r\n\r\n            on('click', '#portfolio-filters li', function (e) {\r\n                e.preventDefault();\r\n                portfolioFilters.forEach(function (el) {\r\n                    el.classList.remove('filter-active');\r\n                });\r\n                this.classList.add('filter-active');\r\n\r\n                portfolioIsotope.arrange({\r\n                    filter: this.getAttribute('data-filter')\r\n                });\r\n                portfolioIsotope.on('arrangeComplete', function () {\r\n                    AOS.refresh()\r\n                });\r\n            }, true);\r\n        }\r\n\r\n    });\r\n\r\n    /**\r\n     * Initiate portfolio lightbox\r\n     */\r\n    const portfolioLightbox = GLightbox({\r\n        selector: '.portfolio-lightbox'\r\n    });\r\n\r\n    /**\r\n     * Portfolio details slider\r\n     */\r\n    new Swiper('.portfolio-details-slider', {\r\n        speed: 400,\r\n        loop: true,\r\n        autoplay: {\r\n            delay: 5000,\r\n            disableOnInteraction: false\r\n        },\r\n        pagination: {\r\n            el: '.swiper-pagination',\r\n            type: 'bullets',\r\n            clickable: true\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Testimonials slider\r\n     */\r\n    new Swiper('.testimonials-slider', {\r\n        speed: 600,\r\n        loop: true,\r\n        autoplay: {\r\n            delay: 5000,\r\n            disableOnInteraction: false\r\n        },\r\n        slidesPerView: 'auto',\r\n        pagination: {\r\n            el: '.swiper-pagination',\r\n            type: 'bullets',\r\n            clickable: true\r\n        },\r\n        breakpoints: {\r\n            320: {\r\n                slidesPerView: 1,\r\n                spaceBetween: 20\r\n            },\r\n\r\n            1200: {\r\n                slidesPerView: 3,\r\n                spaceBetween: 20\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Animation on scroll\r\n     */\r\n    window.addEventListener('load', () => {\r\n        AOS.init({\r\n            duration: 1000,\r\n            easing: 'ease-in-out',\r\n            once: true,\r\n            mirror: false\r\n        })\r\n    });\r\n\r\n})()"]}